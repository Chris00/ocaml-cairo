OCAMLFIND  = @OCAMLFIND@
PP	   =
OCAMLC     = @OCAMLC@
OCAMLOPT   = @OCAMLOPT@
OCAMLDEP   = @OCAMLDEP@
OCAMLDOC   = @OCAMLDOC@
OCAMLMKLIB = @OCAMLMKLIB@
OCAMLLIB   = @OCAMLLIB@

OCAMLC_FLAGS ?= -dtypes
OCAMLOPT_FLAGS ?= -dtypes -inline 3 -w DEFPSVYZX
PP_FLAGS = $(if $(PP), -pp "$(PP)")

OCAML_PACKAGES = $(if $(OCAMLPACKS), -package $(OCAMLPACKS))
LINKPKG = $(if $(OCAMLPACKS), -linkpkg)
OCAMLC_FLAGS += $(if $(OCAMLINCLUDES), $(addprefix -I , $(OCAMLINCLUDES)))
OCAMLOPT_FLAGS += $(if $(OCAMLINCLUDES), $(addprefix -I , $(OCAMLINCLUDES)))

%.cmi: %.mli
	$(OCAMLC) $(PP_FLAGS) $(OCAMLC_FLAGS) $(OCAML_PACKAGES) -c $<

%.cmi: %.ml
	$(OCAMLC) $(PP_FLAGS) $(OCAMLC_FLAGS) $(OCAML_PACKAGES) -c $<

%.cmo: %.ml
	$(OCAMLC) $(PP_FLAGS) $(OCAMLC_FLAGS) $(OCAML_PACKAGES) -c $<

%.cma:
	$(OCAMLC) $(PP_FLAGS) -a -o $@ $(OCAMLC_FLAGS) $^

%.cmx: %.ml
	$(OCAMLOPT) $(PP_FLAGS) $(OCAMLOPT_FLAGS) $(OCAML_PACKAGES) -c $<

%.cmxa:
	$(OCAMLOPT) $(PP_FLAGS) -a -o $@ $(OCAMLOPT_FLAGS) $^

%.exe: %.cmo
	$(OCAMLC) -o $@ $(PP_FLAGS) $(OCAMLC_FLAGS) \
	  $(LIBS_CMA) $(filter %.cmo %.cma,$(filter-out $<,$+)) \
	  $(OCAML_PACKAGES) $(LINKPKG) $<

%.com: %.cmx
	$(OCAMLOPT) -o $@ $(PP_FLAGS) $(OCAMLOPT_FLAGS) \
	  $(LIBS_CMXA) $(filter %.cmx %.cmxa,$(filter-out $<,$+)) \
	  $(OCAML_PACKAGES) $(LINKPKG) $<

.depend.ocaml: $(wildcard *.ml) $(wildcard *.mli)
	@echo "Building $@ ... "
	-@test -z "$^" || $(OCAMLDEP) $(PP_FLAGS) $(SYNTAX_OPTS) $^ > $@
# If we do not force inclusion (e.g. with "-" prefix), then it is not
# recreated and taken into account properly.
include .depend.ocaml


.PHONY: clean
clean::
	$(RM) $(wildcard *~ *.annot *.cmi *.cmo *.cma *.cmx *.cmxa *.o *.a)
