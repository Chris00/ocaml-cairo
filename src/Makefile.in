ROOT=..
include $(ROOT)/Makefile.conf

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
OS_TYPE = @OCAML_OS_TYPE@

DOC_FILES = cairo.mli
DOC_DIR = $(ROOT)/doc/html/
ifeq "$(OS_TYPE)" "Win32"
SO = .dll
else
SO = .so
endif
# Native code versions must be installed if and only if make opt was
# called previously (i.e. the files exist):
INSTALL_FILES = cairo.mli $(wildcard *.cmi *.cma *.cmx *.a *.cmxa) \
  dllcairo_stubs$(SO)

.PHONY: default all opt byte native
default: @OCAMLBEST@
all: byte
opt: native
byte: cairo.cma
native: cairo.cmxa

cairo.cma cairo.cmxa: cairo.cmo cairo.cmx cairo_stubs.o
	$(OCAMLMKLIB) -o cairo -oc cairo_stubs -ocamlc $(OCAMLC) \
	  -ocamlopt $(OCAMLOPT) $(LDFLAGS) $(LIBS) $(CPPFLAGS) $^

cairo_stubs.o: cairo_stubs.c  cairo_macros.c cairo_ocaml_types.c
	$(OCAMLC) $(CPPFLAGS) -c $<


.PHONY: doc
OCAMLDOC_FLAGS += $(if $(OCAMLINCLUDES), $(addprefix -I , $(OCAMLINCLUDES)))
doc:
	if [ ! -d "$(DOC_DIR)" ]; then mkdir -p $(DOC_DIR); fi
	$(OCAMLDOC) -html -d $(DOC_DIR) $(OCAMLDOC_FLAGS) $(DOC_FILES)

.PHONY: install uninstall
# TODO: copy HTML doc
install: META $(INSTALL_FILES)
	ocamlfind install $(PACKAGE) $^

uninstall:
	ocamlfind remove $(PACKAGE)

include $(ROOT)/Makefile.ocaml

.PHONY: clean
clean::
	$(RM) $(wildcard *.so)
